// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/MongoDBNavigator/go-backend/domain/database/repository (interfaces: ValidationReader)

// Package mock is a generated GoMock package.
package mock

import (
	model "github.com/MongoDBNavigator/go-backend/domain/database/model"
	value "github.com/MongoDBNavigator/go-backend/domain/database/value"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockValidationReader is a mock of ValidationReader interface
type MockValidationReader struct {
	ctrl     *gomock.Controller
	recorder *MockValidationReaderMockRecorder
}

// MockValidationReaderMockRecorder is the mock recorder for MockValidationReader
type MockValidationReaderMockRecorder struct {
	mock *MockValidationReader
}

// NewMockValidationReader creates a new mock instance
func NewMockValidationReader(ctrl *gomock.Controller) *MockValidationReader {
	mock := &MockValidationReader{ctrl: ctrl}
	mock.recorder = &MockValidationReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockValidationReader) EXPECT() *MockValidationReaderMockRecorder {
	return m.recorder
}

// Read mocks base method
func (m *MockValidationReader) Read(arg0 value.DBName, arg1 value.CollName) (*model.Validation, error) {
	ret := m.ctrl.Call(m, "Read", arg0, arg1)
	ret0, _ := ret[0].(*model.Validation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read
func (mr *MockValidationReaderMockRecorder) Read(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockValidationReader)(nil).Read), arg0, arg1)
}
