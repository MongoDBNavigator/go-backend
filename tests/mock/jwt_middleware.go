// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/MongoDBNavigator/go-backend/user_interface/resource/middleware (interfaces: Middleware)

// Package mock is a generated GoMock package.
package mock

import (
	go_restful "github.com/emicklei/go-restful"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockMiddleware is a mock of Middleware interface
type MockMiddleware struct {
	ctrl     *gomock.Controller
	recorder *MockMiddlewareMockRecorder
}

// MockMiddlewareMockRecorder is the mock recorder for MockMiddleware
type MockMiddlewareMockRecorder struct {
	mock *MockMiddleware
}

// NewMockMiddleware creates a new mock instance
func NewMockMiddleware(ctrl *gomock.Controller) *MockMiddleware {
	mock := &MockMiddleware{ctrl: ctrl}
	mock.recorder = &MockMiddlewareMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMiddleware) EXPECT() *MockMiddlewareMockRecorder {
	return m.recorder
}

// Handle mocks base method
func (m *MockMiddleware) Handle(arg0 *go_restful.Request, arg1 *go_restful.Response, arg2 *go_restful.FilterChain) {
	m.ctrl.Call(m, "Handle", arg0, arg1, arg2)
}

// Handle indicates an expected call of Handle
func (mr *MockMiddlewareMockRecorder) Handle(arg0, arg1, arg2 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Handle", reflect.TypeOf((*MockMiddleware)(nil).Handle), arg0, arg1, arg2)
}
